#!/usr/bin/env bash

ver="0.0.1"
scriptName=`basename $0`

function help()
{
  	cat << HELP
   	$scriptName -- record some trival textual information immediately by using vim and review them later. 
	usage: $scriptName [new | rm | view | nv | grep | backup | restore | -h]
   	options:	
		new		add a record.
		rm		remove all records stored.
		view		view all records stored.
		nv		add a record while showing all the records stored.
		grep		search string in all records.
		backup		create backup file for current all records.
		restore		restore all records from last backup file.
		-h		show the help document.
			
   	example:	
		$scriptName new
				 
   	version $ver

HELP

   exit 0
}

function getRecordDir() {
	homeDir=`cd ~ && pwd`
	dir=$homeDir/.record
	if [ ! -d "$dir" ]; then
  		mkdir $dir 
	fi
	echo $dir
}
recordDir=`getRecordDir`
dbFile=$recordDir/record.dat
tmpFile=$recordDir/tmp
backupFile=$recordDir/backup.dat

function addRecord() {
	content=`cat $tmpFile`
	content=`echo $content | sed -e 's/^[ ]*//g' | sed -e 's/[ ]*$//g'`
	if [ "$content" = "" ]; then
		return	
	fi
	echo "record time: "
	echo `date` >> $tmpFile
	echo "" >> $tmpFile
	chmod 0600 $dbFile
	cat $dbFile >> $tmpFile
	cat $tmpFile > $dbFile
}

function viewRecord() {
	if [ ! -e "$dbFile" ]; then
  		touch $dbFile 
	fi
	less $dbFile
}

function clearRecord() {
	echo "Warning: you're going to permanently remove all contents in record database!"
	echo "Are you sure? [Y|N]:"
	read input
	if [ "$input" = 'Y' -o "$input" = 'y' ]; then
		echo "" > $dbFile
		echo "Records have been cleared."
		return
	fi
	echo "Records have not been cleared."
}

function editAndView() {
	echo "" > $tmpFile
	chmod 0400 $dbFile
	vim -O $tmpFile $dbFile
	addRecord
}

function editOne() {
	echo "" > $tmpFile
	chmod 0400 $dbFile
	vim $tmpFile
	addRecord
}

function search() {
	[ "$1" = "" ] && return
	target=$1
	grep -in $target $dbFile
}

function backupRecord() {
	if [ ! -e "$dbFile" ]; then
		return
	fi
	cp $dbFile $backupFile
}

function restoreRecord() {
	if [ ! -e "$backupFile" ]; then
		return
	fi
	cp $backupFile $dbFile
}

[ "$1" = "" ] && help && exit

case $1 in
	rm)
	clearRecord
	;;
	view)
	viewRecord
	;;
	nv)
	editAndView
	;;
	-h)
	help
	;;
	new)
	editOne	
	;;
	grep)
	search "$2"
	;;
	backup)
	backupRecord
	;;
	restore)
	restoreRecord
	;;
	*)
	help
	;;
esac
